模型的保存与导入：
保存用于推理的模型：
state_dict:存储模型的参数
定义模型
实例化模型
优化器
Save:
保存模型：torch.save(net.state_dict(),PATH),PATH名称最好包含训练轮数、损失等详细信息
只保存了模型的参数，但没有保存模型的图结构
Load：
建立模型的图：
model=Net()
model.load_state_dict(torch.load(PATH))
model.eval()

保存整个模型：（对磁盘空间占用多）
torch.save(net,PATH)
导入：
model=torch.load(PATH)
model.eval()

保存checkpoint
torch.save({
	'epoch': ,'model_state_dict': ,'optimizer_state_dict': ,'loss': ,
},PATH)

checkpoint=torch.load(PATH)
model.load_state_dict(checkpoint['model_state_dict'])
optimizer.load_state_dict(checkpoint['optimizer_state_dict'])
epoch=checkpoint['epoch']
loss=checkpoint['loss']
model.eval()
model.train()

